name: Manually build on Github Actions

on:
  workflow_dispatch:
    inputs:
      path:
        description: 'Dockerfile path to be built'
        required: true
        default: 'pytorch-1.10.0/torchvision-0.11.0/cuda-11.1.1/ffmpeg-4.4/opencv-4.5.3/python-3.9/Dockerfile'

jobs:
  docker:
    runs-on: ubuntu-latest
#     if: "join(fromJSON(github.event.inputs.path), '') != ''" # preoceed only when we have something to build
    steps:
      -
        name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: false
          large-packages: false
          docker-images: false
          swap-storage: false
      -
        name: Checkout
        uses: actions/checkout@v4
#       -
#         name: Set up QEMU
#         uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Get path and create tag
        id: dockerfile
        run: |
          filepath=${{ github.event.inputs.path }};
          echo "path=$filepath" >> $GITHUB_OUTPUT;
          py_ver=$(echo $filepath | grep 'python-' | sed 's/.*\/python-\([0-9]*\)[\.]*\([0-9]*\)[^/]*.*Dockerfile/-py\1\2/');
          tag=$(echo $filepath | sed 's/docker-images\/cuda-\([0-9]*\)[\.]*\([0-9]*\)[^/]*\/ffmpeg-\([0-9\.]*\)[^/]*\/opencv-\([0-9\.]*\)[^/]*.*Dockerfile/\4-cu\1\2/' | sed 's/\(.*\)\/Dockerfile/\1/' | sed 's/\//-/g');
          echo "tag=${tag}${py_ver}" >> $GITHUB_OUTPUT;
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_PACKAGES_TOKEN }}
      -
        name: Build and push Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ steps.dockerfile.outputs.path }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.dockerfile.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.dockerfile.outputs.tag }}
